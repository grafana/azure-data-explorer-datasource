{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"lodash\"","webpack:///external \"app/core/config\"","webpack:///external \"moment\"","webpack:///external \"app/plugins/sdk\"","webpack:///external \"angular\"","webpack:///./response_parser.ts","webpack:///./query_builder.ts","webpack:///./cache.ts","webpack:///./request_aggregator.ts","webpack:///./datasource.ts","webpack:///./monaco/kusto_code_editor.ts","webpack:///./monaco/kusto_monaco_editor.ts","webpack:///./query_ctrl.ts","webpack:///./annotations_query_ctrl.ts","webpack:///./version.ts","webpack:///./config_ctrl.ts","webpack:///./module.ts"],"names":["installedModules","__webpack_require__","m","module","exports","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__4__","response_parser_ResponseParser","ResponseParser","prototype","parseDatabases","results","databases","data","Tables","length","_i","_a","_b","_c","Rows","row","push","text","value","parseSchemaResult","schemaJson","JSON","parse","parseQueryResult","columns","i","result","Columns","rows","query","resultFormat","external_lodash_default","a","concat","this","parseTimeSeriesResult","parseTableResult","timeIndex","metricIndex","valueIndex","ColumnType","includes","Error","rows_1","epoch","dateTimeToEpoch","metricName","name","bucket","findOrCreateBucket","datapoints","refId","type","map","col","ColumnName","parseToVariables","variables","flattenDeep","transformToAnnotations","options","list","result_1","textIndex","tagsIndex","toLowerCase","annotation","time","Math","floor","toString","tags","trim","split","target","dataTarget","find","dateTime","external_moment_default","valueOf","QueryBuilder","rawQuery","interpolate","_this","macroRegexp","replace","match","p1","p2","getMultiContains","escape","timeField_1","getTimeFilter","interval","getFrom","getUntil","test","exec","from","range","startOf","toISOString","rangeRaw","to","until","timeField","inputs","firstCommaIndex","indexOf","field","substring","templateVar","v","join","Cache","opts","ttl","store","d","put","key","del","expire","Date","now","timeout","setTimeout","get","item","hasOwnProperty","clearTimeout","RequestAggregator","backendSrv","ongoingRequests","g","doRequest","url","maxRetries","h","e","f","t","datasourceRequest","method","catch","error","dsPost","payload","Promise","resolve","reject","__awaiter","r","label","trys","response","sent","error_1","datasource_KustoDBDatasource","KustoDBDatasource","$inject","b","queries","filter","targets","hide","baseUrl","interpolatedQuery","query_builder","templateSrv","scopedVars","interpolateVariable","intervalMs","maxDataPoints","format","datasourceId","id","csl","db","database","promises","doQueries","$q","all","then","annotationQuery","message","buildQuery","metricFindQuery","getDefaultOrFirstDatabase","err","testDatasource","testDatasourceConnection","testDatasourceAccess","status","title","statusText","Message","stringify","getDatabases","defaultOrFirstDatabase","getSchema","req","cache","requestAggregatorSrv","res","queryBuilder","variable","multi","includeAll","val","getCacheTtl","instanceSettings","jsonData","minimalCache","defaultDatabase","request_aggregator","KustoCodeEditor","containerDiv","defaultTimeField","config","splitWithNewLineRegex","newLineRegex","startsWithKustoPipeRegex","kustoPipeRegexStrict","T","D","initMonaco","scope","themeName","bootData","user","lightTheme","monaco","editor","defineTheme","base","inherit","rules","token","foreground","background","colors","textCodeBlock.background","languages","kusto","kustoDefaults","setLanguageSettings","includeControlCommands","newlineAfterPipe","useIntellisenseV2","codeEditor","create","content","language","selectionHighlight","theme","folding","lineNumbers","lineHeight","suggestFontSize","dragAndDrop","occurrencesHighlight","minimap","enabled","renderIndentGuides","wordWrap","layout","getModels","completionItemProvider","registerCompletionItemProvider","triggerCharacters","provideCompletionItems","getCompletionItems","bind","signatureHelpProvider","registerSignatureHelpProvider","signatureHelpTriggerCharacters","provideSignatureHelp","getSignatureHelp","createContextKey","onDidChangeCursorSelection","event","schema","getKustoWorker","workerAccessor","model","getModel","uri","worker","dbName","Object","keys","Databases","setSchemaFromShowSchema","setOnDidChangeModelContent","listener","onDidChangeModelContent","disposeMonaco","dispose","console","addCommand","keybinding","commandFunc","getValue","toSuggestionController","srv","setEditorContent","setValue","position","timeFilterDocs","textUntilPosition","getValueInRange","startLineNumber","startColumn","endLineNumber","lineNumber","endColumn","column","getLineContent","kind","CompletionItemKind","Keyword","documentation","activeParameter","activeSignature","signatures","parameters","source","reason","CursorChangeReason","RecoverFromMarkers","getCharAt","selection","positionLineNumber","positionColumn","triggerSuggestions","suggestController","getContribution","convertedController","_model","cancel","trigger","getLineCount","line","kusto_monaco_editor_link","elem","attrs","kustoCodeEditor","kusto_code_editor","config_default","KeyMod","Shift","KeyCode","Enter","newValue","onChange","$watch","oldValue","editorValue","$$postDigest","n","$apply","$on","window","System","import","pluginBaseUrl","onblur","onkeydown","evt","stopPropagation","C","directive","restrict","template","link","_super","query_ctrl_KustoDBQueryCtrl","KustoDBQueryCtrl","R","onDataReceived","dataList","lastQueryError","undefined","lastQuery","anySeriesFromQuery","onDataError","handleQueryCtrlError","innererror","datasource","dbs","templateUrl","$scope","$injector","call","defaults","defaultsDeep","panelCtrl","events","on","resultFormats","KustoDBAnnotationsQueryCtrl","showHelp","defaultQuery","versionPattern","Q","P","isGtOrEq","version","compared","SemVersion","comparable","isValid","isNumber","major","minor","patch","enumerable","configurable","Number","meta","config_ctrl_KustoDBConfigCtrl","M","kustoDbDatasource","current","hasMinVersion","version_SemVersion","buildInfo","latestVersion","KustoDBConfigCtrl","showMinVersionWarning","hasRequiredGrafanaVersion","suggestUrl","getSuggestUrls","__webpack_exports__","c","getter","o","defineProperty","Symbol","toStringTag","mode","__esModule","ns","default","object","property","p","s","moduleId","l","modules"],"mappings":"oGACAA,EAAA,GA4BAC,EAAAC,mBC7BAC,EAAAC,QAAAC,iBCAAF,EAAAC,QAAAE,iBCAAH,EAAAC,QAAAG,iBCAAJ,EAAAC,QAAAI,iBCAAL,EAAAC,QAAAK,2ECoFAC,GACEC,EAAAC,UAAAC,eAAA,SAAeC,GACb,IAAMC,EAA4B,GAClC,IAAKD,IAAYA,EAAQE,OAASF,EAAQE,KAAKC,QAAyC,IAA/BH,EAAQE,KAAKC,OAAOC,OAC3E,OAAOH,EAGT,IAAkB,IAAAI,EAAA,EAAAC,EAAAN,EAAQE,KAAKC,OAAbE,EAAAC,EAAAF,OAAAC,IAChB,IADG,IACaE,EAAA,EAAAC,EADJF,EAAAD,GACUI,KAANF,EAAAC,EAAAJ,OAAAG,IAAY,CAAvB,IAAIG,EAAGF,EAAAD,GACVN,EAAUU,KAAK,CAAEC,KAAMF,EAAI,IAAMA,EAAI,GAAIG,MAAOH,EAAI,KAIxD,OAAOT,GAGTJ,EAAAC,UAAAgB,kBAAA,SAAkBd,GAChB,IAAMe,EAAaf,EAAQG,OAAO,GAAGM,KAAK,GAAG,GAC7C,OAAOO,KAAKC,MAAMF,IAGpBlB,EAAAC,UAAAoB,iBAAA,SAAiBlB,GAGf,IAFA,IAAIE,EAAc,GACdiB,EAAiB,GACZC,EAAI,EAAGA,EAAIpB,EAAQI,OAAQgB,IAClC,GAA6C,IAAzCpB,EAAQoB,GAAGC,OAAOnB,KAAKC,OAAOC,OAAlC,CAGAe,EAAUnB,EAAQoB,GAAGC,OAAOnB,KAAKC,OAAO,GAAGmB,QAC3C,IAAMC,EAAOvB,EAAQoB,GAAGC,OAAOnB,KAAKC,OAAO,GAAGM,KAG5CP,EADoC,gBAAlCF,EAAQoB,GAAGI,MAAMC,aACZC,EAAAC,EAAEC,OAAO1B,EAAM2B,KAAKC,sBAAsB9B,EAAQoB,GAAGI,MAAOL,EAASI,IAErEG,EAAAC,EAAEC,OAAO1B,EAAM2B,KAAKE,iBAAiB/B,EAAQoB,GAAGI,MAAOL,EAASI,IAG3E,MAAO,CAAErB,KAAMA,IAGjBL,EAAAC,UAAAgC,sBAAA,SAAsBN,EAAOL,EAASI,GAMpC,IALA,IAAMrB,EAAqB,GACvB8B,GAAa,EACbC,GAAe,EACfC,GAAc,EAETd,EAAI,EAAGA,EAAID,EAAQf,OAAQgB,KACf,IAAfY,GAA8C,aAA1Bb,EAAQC,GAAGe,aACjCH,EAAYZ,IAGO,IAAjBa,GAAgD,WAA1Bd,EAAQC,GAAGe,aACnCF,EAAcb,IAGI,IAAhBc,GAAqB,CAAC,MAAO,OAAQ,OAAQ,UAAUE,SAASjB,EAAQC,GAAGe,cAC7ED,EAAad,GAIjB,IAAmB,IAAfY,EACF,MAAM,IAAIK,MAAM,0FAElB,IAAgB,IAAAhC,EAAA,EAAAiC,EAAAf,EAAAlB,EAAAiC,EAAAlC,OAAAC,IAAM,CAAjB,IAAIK,EAAG4B,EAAAjC,GACJkC,EAAQ1C,EAAe2C,gBAAgB9B,EAAIsB,IAC3CS,GAA4B,EAAfR,EAAmBvB,EAAIuB,GAAed,EAAQe,GAAYQ,KACvEC,EAAS9C,EAAe+C,mBAAmB1C,EAAMuC,GACvDE,EAAOE,WAAWlC,KAAK,CAACD,EAAIwB,GAAaK,IACzCI,EAAOG,MAAQtB,EAAMsB,MACrBH,EAAOnB,MAAQA,EAAMA,MAEvB,OAAOtB,GAGTL,EAAAC,UAAAiC,iBAAA,SAAiBP,EAAOL,EAASI,GAW/B,MAViC,CAC/BwB,KAAM,QACN5B,QAASO,EAAAC,EAAEqB,IAAI7B,EAAS,SAAA8B,GACtB,MAAO,CAAErC,KAAMqC,EAAIC,WAAYH,KAAME,EAAId,cAE3CZ,KAAMA,EACNuB,MAAOtB,EAAMsB,MACbtB,MAAOA,EAAMA,QAMjB3B,EAAAC,UAAAqD,iBAAA,SAAiBnD,GAKf,IAJA,IAAMoD,EAAwB,GAIX/C,EAAA,EAAAC,EAFCuB,KAAKX,iBAAiBlB,GAEXE,KAAZG,EAAAC,EAAAF,OAAAC,IACjB,IADG,IAAIgB,EAAMf,EAAAD,GACGE,EAAA,EAAAC,EAAAkB,EAAAC,EAAE0B,YAAYhC,EAAOE,MAArBhB,EAAAC,EAAAJ,OAAAG,IAA4B,CAAvC,IAAIG,EAAGF,EAAAD,GACV6C,EAAUzC,KAAe,CACvBC,KAAMF,EACNG,MAAOH,IAKb,OAAO0C,GAGTvD,EAAAC,UAAAwD,uBAAA,SAAuBC,EAAclC,GAKnC,IAJA,IAEMmC,EAAyB,GAEZnD,EAAA,EAAAC,EAJCuB,KAAKX,iBAAiBG,GAIXnB,KAAZG,EAAAC,EAAAF,OAAAC,IAAkB,CAKnC,IALG,IAAIoD,EAAMnD,EAAAD,GACT2B,GAAa,EACb0B,GAAa,EACbC,GAAa,EAERvC,EAAI,EAAGA,EAAIqC,EAAOtC,QAAQf,OAAQgB,KACtB,IAAfY,GAA+C,aAA3ByB,EAAOtC,QAAQC,GAAG2B,OACxCf,EAAYZ,IAGK,IAAfsC,GAA6D,SAAzCD,EAAOtC,QAAQC,GAAGR,KAAKgD,gBAC7CF,EAAYtC,IAGK,IAAfuC,GAA6D,SAAzCF,EAAOtC,QAAQC,GAAGR,KAAKgD,gBAC7CD,EAAYvC,GAIhB,IAAgB,IAAAb,EAAA,EAAAC,EAAAiD,EAAOlC,KAAPhB,EAAAC,EAAAJ,OAAAG,IAAa,CAAxB,IAAIG,EAAGF,EAAAD,GACViD,EAAK7C,KAAK,CACRkD,WAAYN,EAAQM,WACpBC,KAAMC,KAAKC,MAAMnE,EAAe2C,gBAAgB9B,EAAIsB,KACpDpB,KAAMF,EAAIgD,GAAahD,EAAIgD,GAAWO,WAAa,GACnDC,KAAMxD,EAAIiD,GAAajD,EAAIiD,GAAWQ,OAAOC,MAAM,WAAa,MAKtE,OAAOZ,GAGF3D,EAAA+C,mBAAP,SAA0B1C,EAAMmE,GAC9B,IAAIC,EAAa5C,EAAAC,EAAE4C,KAAKrE,EAAM,CAAC,SAAUmE,IAMzC,OALKC,IACHA,EAAa,CAAED,OAAQA,EAAQxB,WAAY,GAAIC,MAAO,GAAItB,MAAO,IACjEtB,EAAKS,KAAK2D,IAGLA,GAGFzE,EAAA2C,gBAAP,SAAuBgC,GACrB,OAAOC,IAAOD,GAAUE,WAE5B7E,GA3JA,SAAAA,KCjFE,SAAA8E,EAAmBC,EAAiBrB,GAAjB1B,KAAA+C,WAAiB/C,KAAA0B,iBAEpCoB,EAAA7E,UAAA+E,YAAA,eAAAC,EAAAjD,KACE,IAAKA,KAAK+C,SACR,MAAO,CAAEpD,MAAO,IAElB,IAAIA,EAAQK,KAAK+C,SACXG,EAAc,oCAYpB,GAHAvD,GARAA,EAAQA,EAAMwD,QAAQD,EAAa,SAACE,EAAOC,EAAIC,GAC7C,MAAW,aAAPD,EACKJ,EAAKM,iBAAiBD,GAGxBF,KAGKD,QAAQ,gCAAiC,SAACC,EAAOC,GAAO,OAAAJ,EAAKO,OAAOH,KAG9ErD,KAAK0B,QAAS,CAChB,IAAI+B,EAAY,GAchB,GAHA9D,GADAA,GADAA,GARAA,EAAQA,EAAMwD,QAAQD,EAAa,SAACE,EAAOC,EAAIC,GAC7C,MAAW,eAAPD,GACFI,EAAYH,EAAGhB,OACRW,EAAKS,cAAcJ,EAAIL,EAAKvB,UAG9B0B,KAEKD,QAAQ,iBAAkBnD,KAAK0B,QAAQiC,WACvCR,QAAQ,aAAcnD,KAAK4D,QAAQ5D,KAAK0B,WACxCyB,QAAQ,WAAYnD,KAAK6D,SAAS7D,KAAK0B,WAE/B,eACHoC,KAAKnE,GAAQ,CAC9B,IAAK8D,EAAW,CACd,IACML,EADW,wBACMW,KAAKpE,GAC5B8D,EAAYL,EAAOA,EAAM,GAAI,GAG3BK,IACF9D,GAAS,gBAAgB8D,EAAS,SAKxC,MAAO,CAAE9D,MAAKA,IAGhBmD,EAAA7E,UAAA2F,QAAA,SAAQlC,GACN,IAAIsC,EAAOtC,EAAQuC,MAAMD,KACzB,MAAO,YAAYpB,IAAOoB,GACvBE,QAAQ,UACRC,cAAa,KAGlBrB,EAAA7E,UAAA4F,SAAA,SAASnC,GACP,GAA4B,QAAxBA,EAAQ0C,SAASC,GACnB,MAAO,QAEP,IAAIC,EAAQ5C,EAAQuC,MAAMI,GAC1B,MAAO,YAAYzB,IAAO0B,GACvBJ,QAAQ,UACRC,cAAa,KAIpBrB,EAAA7E,UAAAyF,cAAA,SAAca,EAAW7C,GACvB,MAA4B,QAAxBA,EAAQ0C,SAASC,GACTE,EAAS,OAAOvE,KAAK4D,QAAQlC,GAE7B6C,EAAS,QAAQvE,KAAK4D,QAAQlC,GAAQ,QAAQ6C,EAAS,OAAOvE,KAAK6D,SAASnC,IAI1FoB,EAAA7E,UAAAsF,iBAAA,SAAiBiB,GACf,IAAMC,EAAkBD,EAAOE,QAAQ,KACjCC,EAAQH,EAAOI,UAAU,EAAGH,GAC5BI,EAAcL,EAAOI,UAAUJ,EAAOE,QAAQ,KAAO,GAE3D,OAAIG,GAAoD,QAArCA,EAAY9C,cAAcO,OACpC,SAGCqC,EAAMrC,OAAM,QAAQuC,EAAYvC,OAAM,KAGlDQ,EAAA7E,UAAAuF,OAAA,SAAOgB,GACL,OAAOA,EACJI,UAAU,EAAGJ,EAAOjG,OAAS,GAC7BgE,MAAM,OACNpB,IAAI,SAAA2D,GAAK,WAAKA,EAAC,MACfC,KAAK,OAEZjC,GC5FE,SAAAkC,EAAoBC,kBAAA,CAAuBC,IAAK,MAA5BlF,KAAAiF,OAClBjF,KAAKmF,MAAQ,OAAAC,GAGfJ,EAAA/G,UAAAoH,IAAA,SAAIC,EAAKtG,EAAOkG,GAAhB,IAAAjC,EAAAjD,cAAgBkF,MAAMlF,KAAKiF,KAAKC,cAC1BI,YAAqBtG,IAIzBgB,KAAKuF,IAAID,GACTtF,KAAKmF,MAAMG,GAAO,CAChBtG,MAAKA,EACLwG,OAAQC,KAAKC,MAAQR,EACrBS,QAASC,WAAW,WAClB3C,EAAKsC,IAAID,IACRJ,MAIPF,EAAA/G,UAAA4H,IAAA,SAAIP,GACF,IAAIQ,EAAO9F,KAAKmF,MAAMG,GAMtB,OALIQ,GAAQA,EAAKN,QAAUM,EAAKN,QAAUC,KAAKC,QAC7C1F,KAAKuF,IAAID,GACTQ,UAGKA,GAAQA,EAAK9G,OAGtBgG,EAAA/G,UAAAsH,IAAA,SAAID,GACEtF,KAAKmF,MAAMY,eAAeT,KAC5BU,aAAahG,KAAKmF,MAAMG,GAAKK,gBACtB3F,KAAKmF,MAAMG,KAGxBN,6yCCvCE,SAAAiB,EAAoBC,GAAAlG,KAAAkG,aAClBlG,KAAKmG,gBAAkB,OAAAC,GAGnBH,EAAAhI,UAAAoI,UAAN,SAAgBC,EAAKjI,EAAMkI,yBAAA,GAAAC,EAAAxG,UAAA,wBAAAyG,EAAAzG,KAAA,OAAA0G,EAAA1G,KAAA,SAAA2G,GACzB,SAAO3G,KAAKkG,WACTU,kBAAkB,CACjBN,IAAGA,EACHO,OAAQ,OACRxI,KAAIA,IAELyI,MAAM,SAAAC,GACL,GAAiB,EAAbR,EACF,OAAOtD,EAAKoD,UAAUC,EAAKjI,EAAMkI,EAAa,GAGhD,MAAMQ,UAINd,EAAAhI,UAAA+I,OAAN,SAAa1B,EAAKgB,EAAKW,+EACrB,OAAIjH,KAAKmG,gBAAgBJ,eAAeT,KAGtCtF,KAAKmG,gBAAgBb,GAAO,IAAI4B,QAAQ,SAAOC,EAASC,GAAM,OAAAC,EAAApE,cAAA,iBAAAwD,EAAAa,EAAA,OAAAZ,EAAA1G,KAAA,SAAA2G,GAAA,OAAAA,EAAAY,OAAA,OAEzC,OAAAZ,EAAAa,KAAA1I,KAAA,cAAMkB,KAAKqG,UAAUC,EAAKW,kBAArCQ,EAAWhJ,EAAAiJ,OACjBP,EAAQM,kCAERL,EAAOO,8BAEA3H,KAAKmG,gBAAgBb,gCAThC,GAAOtF,KAAKmG,gBAAgBb,SAelCW,GCjCA2B,GAUEC,EAAAC,QACE,oBACQ,aAEA,oBAAAC,EAWV9J,UA8CC0B,MAAA,SAAA+B,GA7CC,IAAMuB,EAAOjD,KACXgI,EACEnI,EAAkBC,EAAAmI,OAAAvG,EAAAwG,QAAA,SAAApC,cACdA,EAACqC,MACLrC,EAAKnG,QAEI,IAANmG,EAAAnG,MAAA+E,QAAM,kBAAAvD,IACX,SAAeqB,GACf,IAAM8D,EAAArD,EAAAmF,QAAoB,iBAS1BC,EAAO,IAAAC,EAAArF,EAAAsF,YAAApF,QAAAX,EAAA7C,MAAA+B,EAAA8G,WAAAvF,EAAAwF,qBAAA/G,GAAAsB,cAAArD,YACF,CAGH2F,IAAKgB,EAAE,IAAO5E,EAAKgH,WAAA,IAAAhH,EAAAiH,cAAA,IAAAjH,EAAAkH,OAAA,IAAApG,EAAA5C,aAAA,IAAAyI,EACnBpH,MAAAuB,EAAYvB,MACZyH,WAAAhH,EAAegH,WACfC,cAAcjH,EAAOiH,cACrBE,aAAQ5F,EAAA6F,GACRxC,IAAKA,EACL3G,MAAM0I,EACNO,OAAAlH,EAAckH,OACdhJ,aAAM4C,EAAA5C,kBACJ,CACAmJ,IAAIV,EACLW,GAAAxG,EAAAyG,iBAKHjB,GAAoB,IAAXA,EAAWzJ,OACrB,OAAAF,KAAA,IAID,IAAA6K,EAAelJ,KAAImJ,UAAUnB,UAC3BhI,KAAOoJ,GAAIC,IAAAH,GAAAI,KAAA,SAAAnL,GACV,WAAAJ,GAAAsB,iBAAAlB,QAIUF,UAAWsL,gBAAU,SAAA7H,OAChCA,EAAOM,WAAQe,gBACb/C,KAAOoJ,GAAEhC,OAAA,CACRoC,QAAA,2CASL,IAAMxB,EAAQhI,KAAOyJ,WAAW/H,EAAQM,WAACe,SAAArB,IAAAM,WAAAiH,UAEzCC,EAAelJ,KAAImJ,UAAUnB,UAC3BhI,KAAMoJ,GAAAC,IAAWH,GAAOI,KAAA,SAAAnL,GAKvB,WADkBJ,GAAA0D,uBAAAC,EAAAvD,QAIvBF,UAiBCyL,gBAAA,SAAA/J,GAhBC,IAAAsD,EAAYjD,YACVA,KAAM2J,4BAAsCL,KAAE,SAAML,GAEpD,IAAMjB,EAAQ/E,EAAOwG,WAAW9J,EAAO,KAAEsJ,GAEzCC,EAAcjG,EAAAkG,UAAAnB,UACX/E,EAAImG,GACJC,IAAIH,GACHI,KAAA,SAAWnL,GACX,WAAAJ,GAAAuD,iBAAAnD,KAEA2I,MAAO,SAAU8C,MACfA,EAAA7C,OAAQ6C,EAAS7C,MAAI1I,MAAUuL,EAAC7C,MAAM1I,KAAA0I,MACvC,MAAAyC,QAAAI,EAAA7C,MAAA1I,KAAA0I,MAAA,kBAAAgB,EAKT9J,UAUC4L,eAAA,WATC,IAAA5G,EAAYjD,YACTA,KAAK8J,2BACLR,KAAK,WAAC,OAAKrG,EAAA8G,yBACVjD,MAAO,SAAAC,SACL,CACAiD,OAAO,QAEPR,QAAAzC,EAAAyC,QAAA,wDAAAzB,EAKa9J,UAAQ6L,yBAAgB,WAC3C,IAAMxD,EAAMtG,KAAAoI,QAAA,uBAITpI,KAAKqG,UAAAC,EAHD,CACLyC,IAAA,oBAGEO,KAAI,SAAS7B,UACJ,MAAPA,EAAOuC,OACL,CACAA,OAAO,UACPR,QAAO,yDACPS,MAAA,WAIF,CACAD,OAAO,QACPR,QAAA,6BAAA/B,EAAAuC,UAGFlD,MAAI,SAAUC,GACd,IAAAyC,EAAW,+BAEXA,GAAUzC,EAAImD,WAAenD,EAAOmD,WAAE,QACpCnD,EAAA1I,MAAW0I,EAAM1I,KAAK8L,QACvBX,GAAAzC,EAAA1I,KAAA8L,QACCpD,EAAW1I,KACZmL,GAAAzC,EAAA1I,KAEAmL,GAAA,sDAEC,CACAQ,OAAO,QACPR,gBAKavL,UAAQ8L,qBAAgB,WAC3C,IAAMzD,EAAMtG,KAAAoI,QAAA,uBAITpI,KAAKqG,UAAAC,EAHD,CACLyC,IAAA,2BAGEO,KAAI,SAAS7B,UACJ,MAAPA,EAAOuC,OACL,CACAA,OAAO,UACPR,QAAO,yDACPS,MAAA,WAIF,CACAD,OAAO,QACPR,QAAA,6BAAA/B,EAAAuC,UAGFlD,MAAI,SACFC,GACF,IAAAyC,EAAW,0EAEXA,GAAUzC,EAAImD,WAAenD,EAAKmD,WAAe,KAAM,GACrDnD,EAAA1I,MAAW0I,EAAM1I,KAAK0I,OAASA,EAAM1I,KAAK0I,MAAM,YACjDyC,GAAAzC,EAAA1I,KAAA0I,SAAA1I,KAAA0I,MAAA,YACCA,EAAW1I,KACZmL,GAAArK,KAAAiL,UAAArD,EAAA1I,SAGA,iEAEC,CACA2L,OAAO,QACPR,gBAKavL,UAAQoM,aAAA,WAC3B,IAAM/D,EAAMtG,KAAAoI,QAAA,uBAKVpI,KAAOqG,UAAIC,EAJN,CACLyC,IAAA,oBAGWO,KAAA,SAAgB7B,GAC1B,WAAA1J,GAAAG,eAAAuJ,QAGLxJ,UASC0L,0BAAA,WARC,IAAI1G,EAAKjD,YACPA,KAAAsK,uBACDpD,QAAAC,QAAAnH,KAAAsK,wBAGCtK,KAAKqK,eAAAf,KAAsB,SAAGlL,GAE7B,OADD6E,EAAAqH,uBAAYlM,EAAuB,GAAAY,MAClCiE,EAAAqH,4BAIgBrM,UAAQsM,UAAA,SAAgBtB,GAC3C,IAAM3C,EAAMtG,KAAAoI,QAAA,gBACVoC,EAAK,CACLzB,IAAA,mBAAAE,EAAA,2BAGAjJ,KAAOqG,UAAIC,EAAAkE,GAAAlB,KAAA,SAAgB7B,GAC1B,WAAA1J,GAAAkB,kBAAAwI,EAAApJ,WAGLJ,UA0BCkL,UAAA,SAAAnB,GAzBC,IAAA/E,EAAOjD,YACLgI,EAAM7G,IAAA,SAAoBxB,GACP2F,OAAArC,EAAAwH,MAAA5E,IAAAlG,EAAA2F,MAIdrC,EAAOyH,qBACP1D,OAAKrH,EAAA2F,IAAArC,EAAMqD,IAAA3G,EAAA2G,IAAA3G,EAAAtB,MACViL,KAAM,SAAM9J,OACVmL,EAAM,CACNnL,OAAOA,EACPG,SAKF,OAHEA,EAAK2F,KACNrC,EAAAwH,MAAApF,IAAA1F,EAAA2F,IAAAqF,GAEDA,IAEA7D,MAAM,SAAA8C,QACJ,CACA7C,MAAO6C,EACPjK,gBAOJ1B,UAAmBwL,WACvB,SAAK9J,EAAY+B,EAAQuH,GAG3B,IAAM2B,EAAc,IAAOtC,EAAAtI,KAAiBuI,YAAApF,QAAAxD,EAAA,GAAAK,KAAAyI,qBAAA/G,GACtC4E,EAAMtG,KAAAoI,QAAa,iBACnBW,EAAA6B,EAAoB5H,cAAArD,MAC1BqI,EAAa,GAWd,OAAAzI,EAVMT,KAAQ,CACXwG,IAAAgB,EAAA,UAAqB2C,EAAA,IAAAF,EACrBF,aAAQ7I,KAAA8I,GACRxC,MACA1G,aAAM,QAAAvB,KACJ,CACA0K,IAAIA,EACLC,GAAAC,KAGJjB,KAED/J,UAcCoI,UAAA,SAAAC,EAAAjI,EAAAkI,GAdoB,IAAAtD,EAAAjD,qBACnBuG,IAAsBA,EAAA,GACnBvG,KAAAkG,WACCU,kBAAmB,CACnBN,IAAAtG,KAAQsG,IAAMA,EACdO,OAAM,OACNxI,SAEAyI,MAAI,SAAaC,MACH,EAAZR,EACD,OAAAtD,EAAAoD,UAAAC,EAAAjI,EAAAkI,EAAA,GAGA,MAAAQ,OAIM9I,UAAUwK,oBAAU,SAAAzJ,EAAA6L,SAChB,iBAAT7L,EACF6L,EAAOC,OAAWD,EAAOE,WAC1B,IAAA/L,EAAA,IAEAA,EAIY,iBAANA,EACRA,EAGYa,EAAoBC,EAAAqB,IAAAnC,EAAA,SAAAgM,SAChB,iBAANhM,EACRA,EAGA,IAAAgM,EAAA,MAEJjG,KAAA,MAAAgD,EAGK9J,UAAiBgN,YAAS,SAAiBC,eAC7CA,EAAAC,SAAwBC,aAEzB,cAGCF,EAAgBC,SAAAC,aAAA,EACjB,UAAA5K,MAAA,qDAGF,WAAA0K,EAAAC,SAAAC,cACFvD,YAvUWA,EAAAqD,EAAUhF,EAAAkD,EAAAb,GACVvI,KAAAkG,WAAEA,EACFlG,KAAAoJ,KAERpJ,KAAKuI,YAAOA,EACZvI,KAAKa,KAAKqK,EAAmBrK,KAC7Bb,KAAK8I,GAAAoC,EAAUpC,GACf9I,KAAKoI,QAAM,qBACXpI,KAAKsG,IAAA4E,EAAsB5E,IAC3BtG,KAAKsK,uBAAyBY,EAAiBC,SAAAE,gBAC/CrL,KAAKyK,MAAA,IAAAA,EAAA,CAAoBvF,IAAGlF,KAAIiL,YAAAC,KACjClL,KAAA0K,qBAAA,IAAAY,EAAApF,uCCbmBqF,EAAAC,EAAiBC,EAAAlB,EAAAmB,GAAU1L,KAAAwL,eAAkCxL,KAAAyL,mBAA8BzL,KAAAuK,YAL/GvK,KAAA0L,SACA1L,KAAA2L,sBAAuB,gBACvB3L,KAAA4L,aAAA,QACA5L,KAAA6L,yBAAuB,UAEuG7L,KAAA8L,qBAAA,eAAAC,GAAAC,EAE9H/N,UAyFCgO,WAAA,SAAAC,GAxFC,IAAMjJ,EAAAjD,KAENmM,EAAcnM,KAAA0L,OAAYU,SAAAC,KAAeC,WAAE,0BAAAC,OACzCC,OAAUC,YAAA,iBACVC,KAAA,KACAC,WAAOC,MACH,CACF,CAAEC,MAAO,UAAAC,WAAuB,UAChC,CAAED,MAAO,sBAAsBC,WAAY,UAC3C,CAAED,MAAO,WAAAC,WAAgB,UACzB,CAAED,MAAO,eAAUC,WAAY,UAC/B,CAAED,MAAO,SAAAC,WAAiB,UAC1B,CAAED,MAAO,gBAAYC,WAAY,UACjC,CAAED,MAAO,WAAAC,WAAsB,UAC/B,CAAED,MAAO,qBAAgBC,WAAU,UACnC,CAAED,MAAO,GAAAC,WAAQ,UACjB,CAAED,MAAO,OAAOC,WAAY,UAC5B,CAAED,MAAO,MAAAC,WAAc,UACvB,CAAED,MAAO,aAAWC,WAAY,UAChC,CAAED,MAAO,UAAUC,WAAY,UAC/B,CAAED,MAAO,SAAAC,WAAc,UACvB,CAAED,MAAO,aAAWC,WAAY,UACjC,CAAAD,MAAA,UAAAE,WAAA,WAAAC,OAEC,CACDC,2BAAA,aAAAV,OAIDW,UAAAC,MAAsBC,cAAMC,oBAAA,CAC5BC,0BACAC,oBACCC,uBAAAxN,KAGDyN,WAAalB,OAAOC,OAAIkB,OAAA1N,KAAAwL,aAAuB,CAC/CxM,MAAAkN,EAAUyB,SAAO,wBACjBC,SAAA,QACAC,sBACAC,MAAO3B,EACP4B,WACAC,YAAY,MACZC,WAAA,GACAC,gBAAa,GACbC,eACAC,wBAASC,QACP,CACDC,YAEDC,sBACCC,SAAA,OAGHxO,KAAIyN,WAAOgB,SAC4B,IAArClC,OAAKC,OAAAkC,YAAAnQ,cACHoQ,uBAAyBpC,OAAIW,UAAA0B,+BAAA,SAC7BC,kBAAA,KAAwB,KACvBC,uBAAA9O,KAAA+O,mBAAAC,KAAAhP,aAGDiP,sBAAA1C,OAAgCW,UAAUgC,8BAAA,SAC1CC,+BAA2B,UAC1BC,qBAAApP,KAAAqP,iBAAAL,KAAAhP,SAKLA,KAAKyN,WAAW6B,iBAAA,qBAA2BtP,KACzCyN,WAAK8B,2BAAiC,SAACC,GACtCvM,EAAAsM,2BAAAC,UAGDjF,YAAajB,KAAA,SAAAmG,GACXA,UAIAvC,UAAmBC,MAAAuC,iBAAqBpG,KAAC,SAAAqG,GACzC,IAAIC,EAAQ3M,EAAAwK,WAAAoC,WACVD,KAGYA,EAAGE,KAAOxG,KAAK,SAAOyG,GAClC,IAAAC,EAAuC,EAAhCC,OAAAC,KAAAT,EAAwBU,WAAQ5R,OAAA0R,OAAAC,KAAAT,EAAkCU,WAAQ,MACjFJ,EAAKK,wBAAoBX,EAAA,iCAAAO,GACxB/M,EAAAwK,WAAAgB,kBAMFxQ,UAAWoS,2BAAkC,SAAAC,GACnDtQ,KAAAyN,WAAA8C,wBAAAD,MAGUrS,UAAAuS,cAAwB,cAC/BxQ,KAAI2O,2BAEH3O,KAAA2O,uBAAA8B,gBACChK,GACDiK,QAAA3J,MAAA,kDAAAN,MAGDzG,KAAIiP,0BAEHjP,KAAAiP,sBAAAwB,gBACChK,GACDiK,QAAA3J,MAAA,iDAAAN,MAGDzG,KAAIyN,eAEHzN,KAAAyN,WAAAgD,gBACChK,GACDiK,QAAA3J,MAAA,0CAAAN,OAKExI,UAAW0S,WAAW,SAAYC,EAAaC,GACrD7Q,KAAAyN,WAAAkD,WAAAC,EAAAC,EAAA,mBAAA7E,EAGa/N,UAAU6S,SAAW,WAClC,OAAA9Q,KAAAyN,WAAAqD,cAGiB7S,UAAA8S,uBAAA,SAAAC,GACjB,OAAAA,KAGM/S,UAAWgT,iBAAgB,SAAAjS,GACjCgB,KAAAyN,WAAAyD,SAAAlS,MAGOf,UACJ8Q,mBAAA,SAAAa,EAAAuB,OACAC,EAAA,mHACApR,KAAAyL,iBAAA,0GAGA4F,EAAkBzB,EAAA0B,gBAAA,CAClBC,gBAAc,EACdC,YAAa,EACbC,cAAWN,EAASO,WACnBC,UAAAR,EAAAS,gBAGD/R,EAAUC,EAAAS,SAAA8Q,EAAA,KAIVxR,EAAOC,EAAAS,SAAA8Q,EAAAtP,cAAA,SAePlC,EAAOC,EAAAS,SAAAqP,EAAAiC,eAAAV,EAAAO,YAAA3P,cAAA,SACL,EAEEwF,MAAM,4BACNuK,KAAAvF,OAAYW,UAAA6E,mBAAAC,mBACH,CACRhT,MAAA,uBAAAgB,KAAAyL,iBAAA,MAAAwG,cAEQ,CACRjT,MAAAoS,KAID7J,MAAM,UACNuK,KAAAvF,OAAYW,UAAA6E,mBAAAC,mBACH,CACRhT,MAAA,aAAAiT,cAGG,CAAAjT,MACA,0GACHgB,KAAAyL,iBAAA,kBAIDlE,MAAM,QACNuK,KAAAvF,OAAYW,UAAA6E,mBAAAC,mBACH,CACRhT,MAAA,WAAAiT,cAGG,CAAAjT,MACA,wGACHgB,KAAAyL,iBAAA,gBAIDlE,MAAM,cACNuK,KAAAvF,OAAYW,UAAA6E,mBAAAC,mBACH,CACRhT,MAAA,iBAAAiT,cAGG,CAAAjT,MACA,2IACAgB,KAAAyL,iBAAA,6GAOX,GAlEK,EAEElE,MAAM,kCACNuK,KAAAvF,OAAYW,UAAA6E,mBAAAC,mBACH,CACRhT,MAAA,6BAAAgB,KAAAyL,iBAAA,MAAAwG,cAEQ,CACRjT,MAAAoS,KAZN,IAAApF,EAyEG/N,UAAiBoR,iBAAS,SAAgBO,EAAAuB,EAAAtE,SAQF,mBAPzB+C,EAAS0B,gBAAU,CACpCC,gBAAaJ,EAASO,WACtBF,YAAaL,EAAES,OAAS,GACxBH,cAAWN,EAASO,WACnBC,UAAAR,EAAAS,SAIF,GAGC,CACAM,gBAAiB,EACjBC,gBAAY,EAAAC,WACV,EAEE7K,MAAA,4BAAA8K,WACE,EAEE9K,MAAA,aAED0K,cAAA,cAAAjS,KAAAyL,iBAAA,gFAAAO,EAUC/N,UAAWsR,2BAA6B,SAAWC,GACpD,gBAAPA,EAAA8C,QAAO9C,EAAA+C,SAAAhG,OAAAC,OAAAgG,mBAAAC,oBAKA,MADGzS,KAAQ0S,UAAElD,EAAAmD,UAAAC,mBAAApD,EAAAmD,UAAAE,eAAA,IAKvB7S,KAAA8S,wBAGO7U,UAAiB6U,mBAAmB,WAC1C,IAAIC,EAAoB/S,KAAAyN,WAAAuF,gBAAA,uCACtBD,GAKF,IAAAE,EAA0BjT,KAAC+Q,uBAASgC,GACpCE,EAAWC,OAAAC,oBACT,WACCF,EAAIC,OAAAE,aACR,MAAApH,EAGe/N,UAAKyU,UAAW,SAAWhB,EAAAE,GACzC,IAAIhC,EAAQ5P,KAAAyN,WAAAoC,eACVD,EACD,YAEW,IAAVA,EAAAyD,gBAAUzD,EAAAyD,eAAA3B,EACX,SAED,IAAI4B,EAAK1D,EAAMiC,eAAaH,UAC1B4B,EAAA/U,OAAUqT,KAAA,EACX,GAEF0B,EAAA1B,EAAA,IACFrG,4BChTOgI,EAAyBrH,EAAAsH,EAAcC,GAC7C,IAAIjI,EAAqBgI,EAAE9Q,KAAA,wBA0BnBuJ,EAAAT,EAAsBU,GAO5B,IAAAwH,EAAgB,IAAUC,EAAQnI,EAAAU,EAAAT,iBAAAS,EAAA3B,UAAAqJ,EAAA9T,GAElC4T,EAAAzH,WAAAC,KAIkByE,WAAGpE,OAAesH,OAACC,MAAWvH,OAAAwH,QAAAC,MAAA,WAC5C,IAAAC,EAAaP,EAAY5C,WACzB5E,EAAMyB,QAAUsG,EAElB/H,EAAAgI,eAKAC,OAAI,UAAc,SAAAF,EAAgBG,GAClC,IAAIC,EAAaX,EAAe5C,WAC9BmD,IAAMI,GAAaJ,IAAAG,KACjBE,aAAe,WACdZ,EAAAzC,iBAAAgD,SAKO5D,2BAAC,WAAAkE,EACXC,OAAI,WACJ,IAAAP,EAAaP,EAAY5C,WACxB5E,EAAAyB,QAAAsG,QAIHQ,IAAA,WAAgB,WACff,EAAAlD,kBAhEGkE,OAAQnI,kBAOZ,WACEN,EAAET,EAAAU,IACP,GAAAwI,OARGC,OAAUC,OAAC,IAAA1I,EAAA2I,cAAA,sBAAAvL,KAAA,WAAA1D,WACT,WACEqG,EAAET,EAAAU,IACL,KAAAqI,EAQGO,OAAW,WACjB5I,EAAAgI,cAGQa,UAAQ,SAAUC,MACpB,WAAJA,EAAI1P,IAEL,OADC0P,EAAAC,sBACDC,EAAApV,EAAAtC,OAAA,uBAAA2X,UAAA,qCAoDD,CACAC,SAAU,IACVC,SA5EK,2EAAAnJ,MA6EH,CACAyB,QAAQ,IACRuG,SAAS,IACT3J,UAAA,IACAkB,iBAAkB,IACnBoJ,cAAA,KAEDS,KAAA/B,WClF2CgC,EAATC,IAASD,iTAuB7CE,EAvB6CF,eAuB5BA,EAEfzN,QAAA,UAAM,aAAA4N,EAkBDzX,UAAe0X,eAAA,SAAAC,GAEpB5V,KAAI6V,sBAAkBC,KACpBC,UAAY,OACXC,EAAAnW,EAAAC,EAAA4C,KAAAkT,EAAA,CACC3U,MAAAjB,KAAAwC,OAAkBvB,QAErB+U,IACFhW,KAAA+V,UAAAC,EAAArW,QAID8V,EAACxX,UAAAgY,YAAA,SAAArM,GAED5J,KAAAkW,qBAAAtM,MAEW3L,UAAAiY,qBAAA,SAAAtM,GACRA,EAAAjK,OAAAiK,EAAAjK,MAAAsB,OAAA2I,EAAAjK,MAAAsB,QAAAjB,KAAAwC,OAAAvB,QAKC2I,EAAI7C,OACJ6C,EAAI7C,MAAM1I,MAEVuL,EAAI7C,MAAI1I,KAAM0I,SACZA,MAAK1I,KAAA0I,MAAAoP,aACHpP,MAAI1I,KAAM0I,MAAKoP,WAAMA,WACxBnW,KAAA6V,eAAMjM,EAAA7C,MAAA1I,KAAA0I,MAAAoP,sBAAA3M,QAGRxJ,KAAA6V,eAAAjM,EAAA7C,MAAA1I,KAAA0I,MAAAoP,WAAA,YAEAvM,EAAA7C,OAAA6C,EAAA7C,MAAA1I,MAAAuL,EAAA7C,MAAA1I,KAAA0I,WAAU8O,eAAiBjM,EAAA7C,MAAU1I,KAAE0I,MAAAyC,QAEvCI,EAAA7C,OAAA6C,EAAA7C,MAAA1I,UAAUwX,eAAgBjM,EAAK7C,MAAK1I,KAAEmL,QAEtCI,EAAAvL,MAAAuL,EAAAvL,KAAA0I,WAAU8O,eAAgBjM,EAAKvL,KAAA0I,MAASyC,QAExCI,EAAAvL,MAAAuL,EAAAvL,KAAAmL,aAAMqM,eAAAjM,EAAAvL,KAAAmL,QAGRxJ,KAAA6V,eAAAjM,MAGa3L,UAAWoM,aAAe,eACpCpH,EAAKjD,YACLA,KAAQoW,WAAU/L,eAAUf,KAAO,SAAU+M,GAEpC,GAAA5P,EADPrI,UAAYiY,GACV9X,SAAK0E,EAAWT,OAAAyG,WACnBhG,EAAAT,OAAAyG,SACAhG,EAAAmT,WAAA9L,wBAAA+L,EAAA,GAAArX,YAISf,UAAAsM,UAAoB,eAC9BtH,EAAOjD,KACT,OAAGA,KAAAqK,eAAAf,KAAA,WACJ,OAAArG,EAAAmT,WAAA7L,UAAAtH,EAAAT,OAAAyG,aArGmCwM,EAASa,YAsG9C,6BAtG4Bb,YAG3BA,EAAWc,EAAAC,OACTvT,EAAOsS,EAAAkB,KAAAzW,KAAAuW,EAAAC,IAAAxW,KAqCT,OAAAsH,EAAAoP,SApCI,CAAA/W,MACE,CACF,qDACA,GACA,eACA,mCACA,2EACF,+BACAoF,KAAA,MACAnF,aAAA,cAaAqJ,SAAA,IAMApJ,EAAsBC,EAAG6W,aAAY1T,EAAMT,OAACS,EAAYyT,UACxDzT,EAAK2T,UAAAC,OAAgBC,GAAA,gBAAA7T,EAAA0S,eAAA3G,KAAA/L,GAAAsT,KACjBK,UAAMC,OAAAC,GAAa,aAAS7T,EAAAgT,YAAejH,KAAA/L,GAAAsT,KAC3CQ,cAAe,CACjB,CAAAhY,KAAA,cAAAC,MAAA,eACF,CAAKD,KAAA,QAAeC,MAAA,UACrBiE,EAAAoH,eAEDpH,MCzCA+T,KAMwB/Y,UAAKoM,aAAsB,eAC/CpH,EAAOjD,YACRA,KAAA5B,WAAA,EAAA4B,KAAA5B,UAAAG,OAEUyB,KAAC5B,UAEV4B,KAAQoW,WAAW/L,eAAUf,KAAA,SAAmB3H,GAKnD,OAHI,GAAA8E,EADCrI,UAAKuD,GACNpD,SAAA0E,EAAAjB,WAAAiH,WACDhG,EAAOjB,WAAKiH,SAAUtH,EAAA,GAAA3C,OAEzBiE,EAAA7E,YA1BM0I,MAAA,eA2BRkQ,EAAAV,YAAA,mCA5BuCU,YAOtCA,IAIEhX,KAAKiX,YACLjX,KAAKkX,aAAY,0GAClBlX,KAAAgC,WAAAe,SAAA/C,KAAAgC,WAAAe,UAAA/C,KAAAkX,aAEDlX,KAAA5B,UAAA4B,KAAAqK,mBCLA8M,EAAA,uDAAAC,GAAAC,EAaOpZ,UAAYqZ,SAAQ,SAAWC,WAClCC,EAAS,IAAAC,EAAgBF,GACvBhY,EAAA,EAAOA,EAAKS,KAAA0X,WAAAnZ,SAAAgB,EAAA,IACbS,KAAA0X,WAAAnY,GAAAiY,EAAAE,WAAAnY,GACG,SAAK,GAERS,KAAA0X,WAAAnY,GAAAiY,EAAAE,WAAAnY,GACF,SAIH,UAEAkY,EAACxZ,UAAA0Z,QAAA,WAED,OAAA9X,EAAIC,EAAA8X,SAAA5X,KAAA6X,8BACWJ,EAAYxZ,UAAW,aAAQ,CAC9C4H,IAAC,kBAAA7F,KAAA6X,MAAA7X,KAAA8X,MAAA9X,KAAA+X,QAAAC,cACHC,kBAACZ,GAAA,SA7BOI,EAAOF,OACTnU,EAAK+T,EAAepT,KAAQwT,GAC5BnU,IACApD,KAAK6X,MAAQK,OAAO9U,EAAM,IAC1BpD,KAAK8X,MAAOI,OAAQ9U,EAAC,OACtBpD,KAAA+X,MAAAG,OAAA9U,EAAA,OACFpD,KAAAmY,KAAA/U,EAAA,QCJDgV,KACOtQ,QAAA,UAA4B,aAAK,MAAAuQ,EAe/Bpa,UAAYoM,aAAI,eACrBpH,EAAIjD,iBACFsY,kBAAqBjO,eAACf,KAAkB,SAAK+M,KAC9CjY,UAAAiY,EACA,EAAApT,EAAA7E,UAAAG,SACJ0E,EAAAsV,QAAApN,SAAAE,gBAAApI,EAAAsV,QAAApN,SAAAE,iBAAApI,EAAA7E,UAAA,GAAAY,YAMGf,UAAOua,cAAiB,WAE3B,gBDEc1Y,EAASiI,UACzB,IAAA0Q,EAAA3Y,YCHE,QAAA8T,EAAA9T,EAAA4Y,UAAAC,gBAED,gBAAA/E,EAAA9T,EAAA4Y,UAAAnB,SACyC,eAAvC3D,EAAa9T,EAAA4Y,UAAAnB,SAzCRqB,EAAA3a,UAAA4a,sBAAc,WA2CvB,OAAA7Y,KAAA8Y,2BA5C8BF,EAAAtC,YAAA,uBAAA+B,GAAA,SAYrBO,EAAarC,EAAArQ,EAAAkD,GAClB,IAAAnG,EAAOjD,UACL8Y,0BAAyB9Y,KAAAwY,gBAC3BxY,KAAE+Y,WAAA,wCAEFxC,EAAIyC,eAAiB,WACnB,MAAK,CAAA/V,EAAQ8V,aAEb/Y,KAAKuY,QAAAzP,KACN9I,KAAAuY,QAAAjS,IAAA,yBAAAtG,KAAAuY,QAAAzP,GACF9I,KAAAsY,kBAAA,IAAA1Q,EAAA5H,KAAAuY,QAAArS,EAAAkD,EAAA,MAEDpJ,KAAAqK,gBC5BF/M,EAAA8H,EAAA6T,EAAA,+BAAArR,IAAiDtK,EAAA8H,EAAA6T,EAAA,8BAAAzD,IACDlY,EAAA8H,EAAA6T,EAAA,+BAAAb,IACuB9a,EAAA8H,EAAA6T,EAAA,yCAAAjC,MjB8BvE1Z,EAAA4b,EAAA7b,EAGAC,EAAA8H,EAAA,SAAA3H,EAAAoD,EAAAsY,GACA7b,EAAA8b,EAAA3b,EAAAoD,IACAoP,OAAAoJ,eAAA5b,EAAAoD,EAAA,CAA0CmX,cAAAnS,IAAAsT,KAK1C7b,EAAAgK,EAAA,SAAA7J,GACA,oBAAA6b,eAAAC,aACAtJ,OAAAoJ,eAAA5b,EAAA6b,OAAAC,YAAA,CAAwDva,MAAA,WAExDiR,OAAAoJ,eAAA5b,EAAA,cAAiDuB,YAQjD1B,EAAAqJ,EAAA,SAAA3H,EAAAwa,GAEA,GADA,EAAAA,IAAAxa,EAAA1B,EAAA0B,IACA,EAAAwa,EAAA,OAAAxa,EACA,KAAAwa,GAAA,iBAAAxa,QAAAya,WAAA,OAAAza,EACA,IAAA0a,EAAAzJ,OAAAvC,OAAA,MAGA,GAFApQ,EAAAgK,EAAAoS,GACAzJ,OAAAoJ,eAAAK,EAAA,WAAyC1B,cAAAhZ,UACzC,EAAAwa,GAAA,iBAAAxa,EAAA,QAAAsG,KAAAtG,EAAA1B,EAAA8H,EAAAsU,EAAApU,EAAA,SAAAA,GAAgH,OAAAtG,EAAAsG,IAAqB0J,KAAA,KAAA1J,IACrI,OAAAoU,GAIApc,EAAAiX,EAAA,SAAA/W,GACA,IAAA2b,EAAA3b,KAAAic,WACA,WAA2B,OAAAjc,EAAAmc,SAC3B,WAAiC,OAAAnc,GAEjC,OADAF,EAAA8H,EAAA+T,EAAA,IAAAA,GACAA,GAIA7b,EAAA8b,EAAA,SAAAQ,EAAAC,GAAsD,OAAA5J,OAAAhS,UAAA8H,eAAA0Q,KAAAmD,EAAAC,IAGtDvc,EAAAwc,EAAA,GAIAxc,IAAAyc,EAAA,GA9EA,SAAAzc,EAAA0c,GAGA,GAAA3c,EAAA2c,GACA,OAAA3c,EAAA2c,GAAAvc,QAGA,IAAAD,EAAAH,EAAA2c,GAAA,CACAza,EAAAya,EACAC,KACAxc,QAAA,IAUA,OANAyc,EAAAF,GAAAvD,KAAAjZ,EAAAC,QAAAD,IAAAC,QAAAH,GAGAE,EAAAyc,KAGAzc,EAAAC,cAvBAJ","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","import _ from 'lodash';\nimport moment from 'moment';\n\nexport interface DataTarget {\n  target: string;\n  datapoints: any[];\n  refId: string;\n  query: any;\n}\n\nexport interface TableResult {\n  columns: TableColumn[];\n  rows: any[];\n  type: string;\n  refId: string;\n  query: string;\n}\n\nexport interface TableColumn {\n  text: string;\n  type: string;\n}\n\nexport interface Variable {\n  text: string;\n  value: string;\n}\n\nexport interface AnnotationItem {\n  annotation: any;\n  time: number;\n  text: string;\n  tags: string[];\n}\n\n// API interfaces\nexport interface KustoDatabaseList {\n  data: {\n    Tables: KustoDatabaseItem[];\n  };\n}\n\nexport interface KustoDatabaseItem {\n  TableName: string;\n  Columns: any[];\n  Rows: any[];\n}\n\nexport interface KustoSchema {\n  Databases: { [key: string]: KustoDatabase };\n  Plugins: any[];\n}\nexport interface KustoDatabase {\n  Name: string;\n  Tables: { [key: string]: KustoTable };\n  Functions: { [key: string]: KustoFunction };\n}\n\nexport interface KustoTable {\n  Name: string;\n  OrderedColumns: KustoColumn[];\n}\n\nexport interface KustoColumn {\n  Name: string;\n  Type: string;\n}\n\nexport interface KustoFunction {\n  Name: string;\n  DocString: string;\n  Body: string;\n  Folder: string;\n  FunctionKind: string;\n  InputParameters: any[];\n  OutputColumns: any[];\n}\n\n// Internal interfaces\nexport interface DatabaseItem {\n  text: string;\n  value: string;\n}\n\nexport class ResponseParser {\n  parseDatabases(results: KustoDatabaseList): DatabaseItem[] {\n    const databases: DatabaseItem[] = [];\n    if (!results || !results.data || !results.data.Tables || results.data.Tables.length === 0) {\n      return databases;\n    }\n\n    for (let table of results.data.Tables) {\n      for (let row of table.Rows) {\n        databases.push({ text: row[5] || row[0], value: row[0] });\n      }\n    }\n\n    return databases;\n  }\n\n  parseSchemaResult(results: any): KustoSchema {\n    const schemaJson = results.Tables[0].Rows[0][0];\n    return JSON.parse(schemaJson);\n  }\n\n  parseQueryResult(results: any) {\n    let data: any[] = [];\n    let columns: any[] = [];\n    for (let i = 0; i < results.length; i++) {\n      if (results[i].result.data.Tables.length === 0) {\n        continue;\n      }\n      columns = results[i].result.data.Tables[0].Columns;\n      const rows = results[i].result.data.Tables[0].Rows;\n\n      if (results[i].query.resultFormat === 'time_series') {\n        data = _.concat(data, this.parseTimeSeriesResult(results[i].query, columns, rows));\n      } else {\n        data = _.concat(data, this.parseTableResult(results[i].query, columns, rows));\n      }\n    }\n    return { data: data };\n  }\n\n  parseTimeSeriesResult(query, columns, rows): DataTarget[] {\n    const data: DataTarget[] = [];\n    let timeIndex = -1;\n    let metricIndex = -1;\n    let valueIndex = -1;\n\n    for (let i = 0; i < columns.length; i++) {\n      if (timeIndex === -1 && columns[i].ColumnType === 'datetime') {\n        timeIndex = i;\n      }\n\n      if (metricIndex === -1 && columns[i].ColumnType === 'string') {\n        metricIndex = i;\n      }\n\n      if (valueIndex === -1 && ['int', 'long', 'real', 'double'].includes(columns[i].ColumnType)) {\n        valueIndex = i;\n      }\n    }\n\n    if (timeIndex === -1) {\n      throw new Error('No datetime column found in the result. The Time Series format requires a time column.');\n    }\n    for (let row of rows) {\n      const epoch = ResponseParser.dateTimeToEpoch(row[timeIndex]);\n      const metricName = metricIndex > -1 ? row[metricIndex] : columns[valueIndex].name;\n      const bucket = ResponseParser.findOrCreateBucket(data, metricName);\n      bucket.datapoints.push([row[valueIndex], epoch]);\n      bucket.refId = query.refId;\n      bucket.query = query.query;\n    }\n    return data;\n  }\n\n  parseTableResult(query, columns, rows): TableResult {\n    const tableResult: TableResult = {\n      type: 'table',\n      columns: _.map(columns, col => {\n        return { text: col.ColumnName, type: col.ColumnType };\n      }),\n      rows: rows,\n      refId: query.refId,\n      query: query.query,\n    };\n\n    return tableResult;\n  }\n\n  parseToVariables(results): Variable[] {\n    const variables: Variable[] = [];\n\n    const queryResult = this.parseQueryResult(results);\n\n    for (let result of queryResult.data) {\n      for (let row of _.flattenDeep(result.rows)) {\n        variables.push(<Variable>{\n          text: row,\n          value: row,\n        });\n      }\n    }\n\n    return variables;\n  }\n\n  transformToAnnotations(options: any, result: any) {\n    const queryResult = this.parseQueryResult(result);\n\n    const list: AnnotationItem[] = [];\n\n    for (let result of queryResult.data) {\n      let timeIndex = -1;\n      let textIndex = -1;\n      let tagsIndex = -1;\n\n      for (let i = 0; i < result.columns.length; i++) {\n        if (timeIndex === -1 && result.columns[i].type === 'datetime') {\n          timeIndex = i;\n        }\n\n        if (textIndex === -1 && result.columns[i].text.toLowerCase() === 'text') {\n          textIndex = i;\n        }\n\n        if (tagsIndex === -1 && result.columns[i].text.toLowerCase() === 'tags') {\n          tagsIndex = i;\n        }\n      }\n\n      for (let row of result.rows) {\n        list.push({\n          annotation: options.annotation,\n          time: Math.floor(ResponseParser.dateTimeToEpoch(row[timeIndex])),\n          text: row[textIndex] ? row[textIndex].toString() : '',\n          tags: row[tagsIndex] ? row[tagsIndex].trim().split(/\\s*,\\s*/) : [],\n        });\n      }\n    }\n\n    return list;\n  }\n\n  static findOrCreateBucket(data, target): DataTarget {\n    let dataTarget = _.find(data, ['target', target]);\n    if (!dataTarget) {\n      dataTarget = { target: target, datapoints: [], refId: '', query: '' };\n      data.push(dataTarget);\n    }\n\n    return dataTarget;\n  }\n\n  static dateTimeToEpoch(dateTime) {\n    return moment(dateTime).valueOf();\n  }\n}\n","import moment from 'moment';\n\nexport default class QueryBuilder {\n  constructor(public rawQuery, public options) {}\n\n  interpolate() {\n    if (!this.rawQuery) {\n      return { query: '' };\n    }\n    let query = this.rawQuery;\n    const macroRegexp = /\\$__([_a-zA-Z0-9]+)\\(([^\\)]*)\\)/gi;\n    query = query.replace(macroRegexp, (match, p1, p2) => {\n      if (p1 === 'contains') {\n        return this.getMultiContains(p2);\n      }\n\n      return match;\n    });\n\n    query = query.replace(/\\$__escapeMulti\\(('[^]*')\\)/gi, (match, p1) => this.escape(p1));\n\n    // if query or annotation query\n    if (this.options) {\n      let timeField = '';\n      query = query.replace(macroRegexp, (match, p1, p2) => {\n        if (p1 === 'timeFilter') {\n          timeField = p2.trim();\n          return this.getTimeFilter(p2, this.options);\n        }\n\n        return match;\n      });\n      query = query.replace(/\\$__interval/gi, this.options.interval);\n      query = query.replace(/\\$__from/gi, this.getFrom(this.options));\n      query = query.replace(/\\$__to/gi, this.getUntil(this.options));\n\n      const orderByRegexp = /order\\s+by/gi;\n      if (!orderByRegexp.test(query)) {\n        if (!timeField) {\n          const binRegex = /bin\\(([_a-zA-Z0-9]+),/;\n          const match = binRegex.exec(query);\n          timeField = match? match[1]: '';\n        }\n\n        if (timeField) {\n          query += `\\n| order by ${timeField} asc`;\n        }\n      }\n    }\n\n    return { query };\n  }\n\n  getFrom(options) {\n    var from = options.range.from;\n    return `datetime(${moment(from)\n      .startOf('minute')\n      .toISOString()})`;\n  }\n\n  getUntil(options) {\n    if (options.rangeRaw.to === 'now') {\n      return 'now()';\n    } else {\n      var until = options.range.to;\n      return `datetime(${moment(until)\n        .startOf('minute')\n        .toISOString()})`;\n    }\n  }\n\n  getTimeFilter(timeField, options) {\n    if (options.rangeRaw.to === 'now') {\n      return `${timeField} >= ${this.getFrom(options)}`;\n    } else {\n      return `${timeField}  >= ${this.getFrom(options)} and ${timeField} <= ${this.getUntil(options)}`;\n    }\n  }\n\n  getMultiContains(inputs: string) {\n    const firstCommaIndex = inputs.indexOf(',');\n    const field = inputs.substring(0, firstCommaIndex);\n    const templateVar = inputs.substring(inputs.indexOf(',') + 1);\n\n    if (templateVar && templateVar.toLowerCase().trim() === 'all') {\n      return '1 == 1';\n    }\n\n    return `${field.trim()} in (${templateVar.trim()})`;\n  }\n\n  escape(inputs: string) {\n    return inputs\n      .substring(1, inputs.length - 1)\n      .split(`','`)\n      .map(v => `@'${v}'`)\n      .join(', ');\n  }\n}\n","interface CacheOptions {\n  ttl: number;\n}\n\nexport default class Cache {\n  store: any;\n  constructor(private opts: CacheOptions = { ttl: 10000 }) {\n    this.store = {};\n  }\n\n  put(key, value, ttl = this.opts.ttl): void {\n    if (key === undefined || value === undefined) {\n      return;\n    }\n\n    this.del(key);\n    this.store[key] = {\n      value,\n      expire: Date.now() + ttl,\n      timeout: setTimeout(() => {\n        this.del(key);\n      }, ttl),\n    };\n  }\n\n  get(key): any {\n    var item = this.store[key];\n    if (item && item.expire && item.expire <= Date.now()) {\n      this.del(key);\n      item = undefined;\n    }\n\n    return item && item.value;\n  }\n\n  del(key: string): void {\n    if (this.store.hasOwnProperty(key)) {\n      clearTimeout(this.store[key].timeout);\n      delete this.store[key];\n    }\n  }\n}\n","export default class RequestAggregator {\n  ongoingRequests: any;\n  constructor(private backendSrv) {\n    this.ongoingRequests = {};\n  }\n\n  async doRequest(url, data, maxRetries = 1): Promise<any> {\n    return this.backendSrv\n      .datasourceRequest({\n        url,\n        method: 'POST',\n        data,\n      })\n      .catch(error => {\n        if (maxRetries > 0) {\n          return this.doRequest(url, data, maxRetries - 1);\n        }\n\n        throw error;\n      });\n  }\n\n  async dsPost(key, url, payload): Promise<any> {\n    if (this.ongoingRequests.hasOwnProperty(key)) {\n      return this.ongoingRequests[key];\n    } else {\n      this.ongoingRequests[key] = new Promise(async (resolve, reject) => {\n        try {\n          const response = await this.doRequest(url, payload);\n          resolve(response);\n        } catch (error) {\n          reject(error);\n        } finally {\n          delete this.ongoingRequests[key];\n        }\n      });\n      return this.ongoingRequests[key];\n    }\n  }\n}\n","import _ from 'lodash';\nimport { ResponseParser, DatabaseItem } from './response_parser';\nimport QueryBuilder from './query_builder';\nimport Cache from './cache';\nimport RequestAggregator from './request_aggregator';\n\nexport class KustoDBDatasource {\n  id: number;\n  name: string;\n  baseUrl: string;\n  url: string;\n  defaultOrFirstDatabase: string;\n  cache: Cache;\n  requestAggregatorSrv: RequestAggregator;\n\n  /** @ngInject */\n  constructor(\n    instanceSettings,\n    private backendSrv,\n    private $q,\n    private templateSrv,\n  ) {\n    this.name = instanceSettings.name;\n    this.id = instanceSettings.id;\n    this.baseUrl = `/azuredataexplorer`;\n    this.url = instanceSettings.url;\n    this.defaultOrFirstDatabase = instanceSettings.jsonData.defaultDatabase;\n    this.cache = new Cache({ ttl: this.getCacheTtl(instanceSettings) });\n    this.requestAggregatorSrv = new RequestAggregator(backendSrv);\n  }\n\n  query(options) {\n    const queries = _.filter(options.targets, item => {\n      return (\n        item.hide !== true &&\n        item.query &&\n        item.query.indexOf('<table name>') === -1\n      );\n    }).map(target => {\n      const url = `${this.baseUrl}/v1/rest/query`;\n      const interpolatedQuery = new QueryBuilder(\n        this.templateSrv.replace(\n          target.query,\n          options.scopedVars,\n          this.interpolateVariable,\n        ),\n        options,\n      ).interpolate().query;\n\n      return {\n        key: `${url}-${options.intervalMs}-${options.maxDataPoints}-${\n          options.format\n        }-${target.resultFormat}-${interpolatedQuery}`,\n        refId: target.refId,\n        intervalMs: options.intervalMs,\n        maxDataPoints: options.maxDataPoints,\n        datasourceId: this.id,\n        url: url,\n        query: interpolatedQuery,\n        format: options.format,\n        resultFormat: target.resultFormat,\n        data: {\n          csl: interpolatedQuery,\n          db: target.database,\n        },\n      };\n    });\n\n    if (!queries || queries.length === 0) {\n      return { data: [] };\n    }\n\n    const promises = this.doQueries(queries);\n\n    return this.$q.all(promises).then(results => {\n      return new ResponseParser().parseQueryResult(results);\n    });\n  }\n\n  annotationQuery(options) {\n    if (!options.annotation.rawQuery) {\n      return this.$q.reject({\n        message: 'Query missing in annotation definition',\n      });\n    }\n\n    const queries: any[] = this.buildQuery(\n      options.annotation.rawQuery,\n      options,\n      options.annotation.database,\n    );\n\n    const promises = this.doQueries(queries);\n\n    return this.$q.all(promises).then(results => {\n      const annotations = new ResponseParser().transformToAnnotations(\n        options,\n        results,\n      );\n      return annotations;\n    });\n  }\n\n  metricFindQuery(query: string) {\n    return this.getDefaultOrFirstDatabase().then(database => {\n      const queries: any[] = this.buildQuery(query, null, database);\n\n      const promises = this.doQueries(queries);\n\n      return this.$q\n        .all(promises)\n        .then(results => {\n          return new ResponseParser().parseToVariables(results);\n        })\n        .catch(err => {\n          if (err.error && err.error.data && err.error.data.error) {\n            throw { message: err.error.data.error['@message'] };\n          }\n        });\n    });\n  }\n\n  testDatasource() {\n    return this.testDatasourceConnection()\n      .then(() => this.testDatasourceAccess())\n      .catch(error => {\n        return {\n          status: 'error',\n          message:\n            error.message + ' Connection to database could not be established.',\n        };\n      });\n  }\n\n  testDatasourceConnection() {\n    const url = `${this.baseUrl}/v1/rest/mgmt`;\n    const req = {\n      csl: '.show databases',\n    };\n    return this.doRequest(url, req)\n      .then(response => {\n        if (response.status === 200) {\n          return {\n            status: 'success',\n            message: 'Successfully queried the Azure Data Explorer database.',\n            title: 'Success',\n          };\n        }\n\n        return {\n          status: 'error',\n          message: 'Returned http status code ' + response.status,\n        };\n      })\n      .catch(error => {\n        let message = 'Azure Data Explorer: ';\n        message += error.statusText ? error.statusText + ': ' : '';\n\n        if (error.data && error.data.Message) {\n          message += error.data.Message;\n        } else if (error.data) {\n          message += error.data;\n        } else {\n          message += 'Cannot connect to the Azure Data Explorer REST API.';\n        }\n        return {\n          status: 'error',\n          message: message,\n        };\n      });\n  }\n\n  testDatasourceAccess() {\n    const url = `${this.baseUrl}/v1/rest/mgmt`;\n    const req = {\n      csl: '.show databases schema',\n    };\n    return this.doRequest(url, req)\n      .then(response => {\n        if (response.status === 200) {\n          return {\n            status: 'success',\n            message: 'Successfully queried the Azure Data Explorer database.',\n            title: 'Success',\n          };\n        }\n\n        return {\n          status: 'error',\n          message: 'Returned http status code ' + response.status,\n        };\n      })\n      .catch(error => {\n        let message =\n          'Azure Data Explorer: Cannot read database schema from REST API. ';\n        message += error.statusText ? error.statusText + ': ' : '';\n\n        if (error.data && error.data.error && error.data.error['@message']) {\n          message += error.data.error && error.data.error['@message'];\n        } else if (error.data) {\n          message += JSON.stringify(error.data);\n        } else {\n          message +=\n            'Cannot read database schema from Azure Data Explorer REST API.';\n        }\n        return {\n          status: 'error',\n          message: message,\n        };\n      });\n  }\n\n  getDatabases(): Promise<DatabaseItem[]> {\n    const url = `${this.baseUrl}/v1/rest/mgmt`;\n    const req = {\n      csl: '.show databases',\n    };\n\n    return this.doRequest(url, req).then(response => {\n      return new ResponseParser().parseDatabases(response);\n    });\n  }\n\n  getDefaultOrFirstDatabase() {\n    if (this.defaultOrFirstDatabase) {\n      return Promise.resolve(this.defaultOrFirstDatabase);\n    }\n\n    return this.getDatabases().then(databases => {\n      this.defaultOrFirstDatabase = databases[0].value;\n      return this.defaultOrFirstDatabase;\n    });\n  }\n\n  getSchema(database) {\n    const url = `${this.baseUrl}/v1/rest/mgmt`;\n    const req = {\n      csl: `.show database [${database}] schema as json`,\n    };\n\n    return this.doRequest(url, req).then(response => {\n      return new ResponseParser().parseSchemaResult(response.data);\n    });\n  }\n\n  doQueries(queries) {\n    return queries.map(query => {\n      const cacheResponse = this.cache.get(query.key);\n      if (cacheResponse) {\n        return cacheResponse;\n      } else {\n        return this.requestAggregatorSrv\n          .dsPost(query.key, this.url + query.url, query.data)\n          .then(result => {\n            const res = {\n              result: result,\n              query: query,\n            };\n            if (query.key) {\n              this.cache.put(query.key, res);\n            }\n            return res;\n          })\n          .catch(err => {\n            throw {\n              error: err,\n              query: query,\n            };\n          });\n      }\n    });\n  }\n\n  private buildQuery(query: string, options: any, database: string) {\n    const queryBuilder = new QueryBuilder(\n      this.templateSrv.replace(query, {}, this.interpolateVariable),\n      options,\n    );\n    const url = `${this.baseUrl}/v1/rest/query`;\n    const csl = queryBuilder.interpolate().query;\n    const queries: any[] = [];\n    queries.push({\n      key: `${url}-table-${database}-${csl}`,\n      datasourceId: this.id,\n      url: url,\n      resultFormat: 'table',\n      data: {\n        csl,\n        db: database,\n      },\n    });\n    return queries;\n  }\n\n  doRequest(url, data, maxRetries = 1) {\n    return this.backendSrv\n      .datasourceRequest({\n        url: this.url + url,\n        method: 'POST',\n        data: data,\n      })\n      .catch(error => {\n        if (maxRetries > 0) {\n          return this.doRequest(url, data, maxRetries - 1);\n        }\n\n        throw error;\n      });\n  }\n\n  interpolateVariable(value, variable) {\n    if (typeof value === 'string') {\n      if (variable.multi || variable.includeAll) {\n        return \"'\" + value + \"'\";\n      } else {\n        return value;\n      }\n    }\n\n    if (typeof value === 'number') {\n      return value;\n    }\n\n    var quotedValues = _.map(value, function(val) {\n      if (typeof value === 'number') {\n        return value;\n      }\n\n      return \"'\" + val + \"'\";\n    });\n    return quotedValues.join(',');\n  }\n\n  getCacheTtl(instanceSettings) {\n    if (instanceSettings.jsonData.minimalCache === undefined) {\n      // default ttl is 30 sec\n      return 30000;\n    }\n\n    if (instanceSettings.jsonData.minimalCache < 1) {\n      throw new Error('Minimal cache must be greater than or equal to 1.');\n    }\n\n    return instanceSettings.jsonData.minimalCache * 1000;\n  }\n}\n","import _ from 'lodash';\n\nexport interface SuggestionController {\n  _model: any;\n}\n\nexport default class KustoCodeEditor {\n  codeEditor: monaco.editor.IStandaloneCodeEditor;\n  completionItemProvider: monaco.IDisposable;\n  signatureHelpProvider: monaco.IDisposable;\n\n  splitWithNewLineRegex = /[^\\n]+\\n?|\\n/g;\n  newLineRegex = /\\r?\\n/;\n  startsWithKustoPipeRegex = /^\\|\\s*/g;\n  kustoPipeRegexStrict = /^\\|\\s*$/g;\n\n  constructor(private containerDiv: any, private defaultTimeField: string, private getSchema: () => any, private config: any) {}\n\n  initMonaco(scope) {\n    const themeName = this.config.bootData.user.lightTheme ? 'grafana-light' : 'vs-dark';\n\n    monaco.editor.defineTheme('grafana-light', {\n      base: 'vs',\n      inherit: true,\n      rules: [\n        { token: 'comment', foreground: '008000' },\n        { token: 'variable.predefined', foreground: '800080' },\n        { token: 'function', foreground: '0000FF' },\n        { token: 'operator.sql', foreground: 'FF4500' },\n        { token: 'string', foreground: 'B22222' },\n        { token: 'operator.scss', foreground: '0000FF' },\n        { token: 'variable', foreground: 'C71585' },\n        { token: 'variable.parameter', foreground: '9932CC' },\n        { token: '', foreground: '000000' },\n        { token: 'type', foreground: '0000FF' },\n        { token: 'tag', foreground: '0000FF' },\n        { token: 'annotation', foreground: '2B91AF' },\n        { token: 'keyword', foreground: '0000FF' },\n        { token: 'number', foreground: '191970' },\n        { token: 'annotation', foreground: '9400D3' },\n        { token: 'invalid', background: 'cd3131' },\n      ],\n      colors: {\n        'textCodeBlock.background': '#FFFFFF',\n      },\n    });\n\n    monaco.languages['kusto'].kustoDefaults.setLanguageSettings({\n      includeControlCommands: true,\n      newlineAfterPipe: true,\n      useIntellisenseV2: false,\n    });\n\n    this.codeEditor = monaco.editor.create(this.containerDiv, {\n      value: scope.content || 'Write your query here',\n      language: 'kusto',\n      selectionHighlight: false,\n      theme: themeName,\n      folding: true,\n      lineNumbers: 'off',\n      lineHeight: 16,\n      suggestFontSize: 13,\n      dragAndDrop: false,\n      occurrencesHighlight: false,\n      minimap: {\n        enabled: false,\n      },\n      renderIndentGuides: false,\n      wordWrap: 'on',\n    });\n    this.codeEditor.layout();\n\n    if (monaco.editor.getModels().length === 1) {\n      this.completionItemProvider = monaco.languages.registerCompletionItemProvider('kusto', {\n        triggerCharacters: ['.', ' '],\n        provideCompletionItems: this.getCompletionItems.bind(this),\n      });\n\n      this.signatureHelpProvider = monaco.languages.registerSignatureHelpProvider('kusto', {\n        signatureHelpTriggerCharacters: ['(', ')'],\n        provideSignatureHelp: this.getSignatureHelp.bind(this),\n      });\n    }\n\n    this.codeEditor.createContextKey('readyToExecute', true);\n\n    this.codeEditor.onDidChangeCursorSelection(event => {\n      this.onDidChangeCursorSelection(event);\n    });\n\n    this.getSchema().then(schema => {\n      if (!schema) {\n        return;\n      }\n\n      monaco.languages['kusto'].getKustoWorker().then(workerAccessor => {\n        const model = this.codeEditor.getModel();\n        if (!model) {\n          return;\n        }\n        workerAccessor(model.uri).then(worker => {\n          const dbName = Object.keys(schema.Databases).length > 0 ? Object.keys(schema.Databases)[0] : '';\n          worker.setSchemaFromShowSchema(schema, 'https://help.kusto.windows.net', dbName);\n          this.codeEditor.layout();\n        });\n      });\n    });\n  }\n\n  setOnDidChangeModelContent(listener) {\n    this.codeEditor.onDidChangeModelContent(listener);\n  }\n\n  disposeMonaco() {\n    if (this.completionItemProvider) {\n      try {\n        this.completionItemProvider.dispose();\n      } catch (e) {\n        console.error('Failed to dispose the completion item provider.', e);\n      }\n    }\n    if (this.signatureHelpProvider) {\n      try {\n        this.signatureHelpProvider.dispose();\n      } catch (e) {\n        console.error('Failed to dispose the signature help provider.', e);\n      }\n    }\n    if (this.codeEditor) {\n      try {\n        this.codeEditor.dispose();\n      } catch (e) {\n        console.error('Failed to dispose the editor component.', e);\n      }\n    }\n  }\n\n  addCommand(keybinding: number, commandFunc: monaco.editor.ICommandHandler) {\n    this.codeEditor.addCommand(keybinding, commandFunc, 'readyToExecute');\n  }\n\n  getValue() {\n    return this.codeEditor.getValue();\n  }\n\n  toSuggestionController(srv: monaco.editor.IEditorContribution): SuggestionController {\n    return <any>srv;\n  }\n\n  setEditorContent(value) {\n    this.codeEditor.setValue(value);\n  }\n\n  getCompletionItems(model: monaco.editor.IReadOnlyModel, position: monaco.Position) {\n    const timeFilterDocs =\n      '##### Macro that uses the selected timerange in Grafana to filter the query.\\n\\n' +\n      '- `$__timeFilter()` -> Uses the ' + this.defaultTimeField + ' column\\n\\n' +\n      '- `$__timeFilter(datetimeColumn)` ->  Uses the specified datetime column to build the query.';\n\n    var textUntilPosition = model.getValueInRange({\n      startLineNumber: 1,\n      startColumn: 1,\n      endLineNumber: position.lineNumber,\n      endColumn: position.column,\n    });\n\n    if (!_.includes(textUntilPosition, '|')) {\n      return [];\n    }\n\n    if (!_.includes(textUntilPosition.toLowerCase(), 'where')) {\n      return [\n        {\n          label: 'where $__timeFilter(timeColumn)',\n          kind: monaco.languages.CompletionItemKind.Keyword,\n          insertText: {\n            value: 'where \\\\$__timeFilter(${0:' + this.defaultTimeField + '})',\n          },\n          documentation: {\n            value: timeFilterDocs,\n          },\n        },\n      ];\n    }\n\n    if (_.includes(model.getLineContent(position.lineNumber).toLowerCase(), 'where')) {\n      return [\n        {\n          label: '$__timeFilter(timeColumn)',\n          kind: monaco.languages.CompletionItemKind.Keyword,\n          insertText: {\n            value: '\\\\$__timeFilter(${0:' + this.defaultTimeField + '})',\n          },\n          documentation: {\n            value: timeFilterDocs,\n          },\n        },\n        {\n          label: '$__from',\n          kind: monaco.languages.CompletionItemKind.Keyword,\n          insertText: {\n            value: `\\\\$__from`,\n          },\n          documentation: {\n            value:\n              'Built-in variable that returns the from value of the selected timerange in Grafana.\\n\\n' +\n              'Example: `where ' + this.defaultTimeField + ' > $__from` ',\n          },\n        },\n        {\n          label: '$__to',\n          kind: monaco.languages.CompletionItemKind.Keyword,\n          insertText: {\n            value: `\\\\$__to`,\n          },\n          documentation: {\n            value:\n              'Built-in variable that returns the to value of the selected timerange in Grafana.\\n\\n' +\n              'Example: `where ' + this.defaultTimeField + ' < $__to` ',\n          },\n        },\n        {\n          label: '$__interval',\n          kind: monaco.languages.CompletionItemKind.Keyword,\n          insertText: {\n            value: `\\\\$__interval`,\n          },\n          documentation: {\n            value:\n              '##### Built-in variable that returns an automatic time grain suitable for the current timerange.\\n\\n' +\n              'Used with the bin() function - `bin(' + this.defaultTimeField + ', $__interval)` \\n\\n' +\n              '[Grafana docs](http://docs.grafana.org/reference/templating/#the-interval-variable)',\n          },\n        },\n      ];\n    }\n\n    return [];\n  }\n\n  getSignatureHelp(model: monaco.editor.IReadOnlyModel, position: monaco.Position, token: monaco.CancellationToken) {\n    var textUntilPosition = model.getValueInRange({\n      startLineNumber: position.lineNumber,\n      startColumn: position.column - 14,\n      endLineNumber: position.lineNumber,\n      endColumn: position.column,\n    });\n\n    if (textUntilPosition !== '$__timeFilter(') {\n      return <monaco.languages.SignatureHelp>{};\n    }\n\n    const signature: monaco.languages.SignatureHelp = {\n      activeParameter: 0,\n      activeSignature: 0,\n      signatures: [\n        {\n          label: '$__timeFilter(timeColumn)',\n          parameters: [\n            {\n              label: 'timeColumn',\n              documentation:\n                'Default is ' + this.defaultTimeField + ' column. Datetime column to filter data using the selected date range. ',\n            },\n          ],\n        },\n      ],\n    };\n\n    return signature;\n  }\n\n  onDidChangeCursorSelection(event) {\n    if (event.source !== 'modelChange' || event.reason !== monaco.editor.CursorChangeReason.RecoverFromMarkers) {\n      return;\n    }\n    const lastChar = this.getCharAt(event.selection.positionLineNumber, event.selection.positionColumn - 1);\n\n    if (lastChar !== ' ') {\n      return;\n    }\n\n    this.triggerSuggestions();\n  }\n\n  triggerSuggestions() {\n    const suggestController = this.codeEditor.getContribution('editor.contrib.suggestController');\n    if (!suggestController) {\n      return;\n    }\n\n    const convertedController = this.toSuggestionController(suggestController);\n\n    convertedController._model.cancel();\n    setTimeout(function() {\n      convertedController._model.trigger(true);\n    }, 10);\n  }\n\n  getCharAt(lineNumber: number, column: number) {\n    const model = this.codeEditor.getModel();\n    if (!model) {\n      return '';\n    }\n    if (model.getLineCount() === 0 || model.getLineCount() < lineNumber) {\n      return '';\n    }\n    const line = model.getLineContent(lineNumber);\n    if (line.length < column || column < 1) {\n      return '';\n    }\n    return line[column - 1];\n  }\n}\n","///<reference path=\"../../node_modules/monaco-editor/monaco.d.ts\" />\n\nimport angular from 'angular';\nimport KustoCodeEditor from './kusto_code_editor';\nimport config from 'grafana/app/core/config';\n\nlet editorTemplate = `<div id=\"content\" tabindex=\"0\" style=\"width: 100%; height: 150px\"></div>`;\n\nfunction link(scope, elem, attrs) {\n  const containerDiv = elem.find('#content')[0];\n  if (!(<any>window).monaco) {\n    (<any>window).System.import(`/${scope.pluginBaseUrl}/lib/monaco.min.js`).then(() => {\n      setTimeout(() => {\n        initMonaco(containerDiv, scope);\n      }, 1);\n    });\n  } else {\n    setTimeout(() => {\n      initMonaco(containerDiv, scope);\n    }, 1);\n  }\n\n  containerDiv.onblur = () => {\n    scope.onChange();\n  };\n\n  containerDiv.onkeydown = (evt) => {\n    if (evt.key === 'Escape') {\n      evt.stopPropagation();\n      return true;\n    }\n\n    return undefined;\n  };\n\n  function initMonaco(containerDiv, scope) {\n    const kustoCodeEditor = new KustoCodeEditor(\n      containerDiv,\n      scope.defaultTimeField,\n      scope.getSchema,\n      config\n    );\n\n    kustoCodeEditor.initMonaco(scope);\n\n    /* tslint:disable:no-bitwise */\n    kustoCodeEditor.addCommand(\n      monaco.KeyMod.Shift | monaco.KeyCode.Enter,\n      () => {\n        const newValue = kustoCodeEditor.getValue();\n        scope.content = newValue;\n        scope.onChange();\n      },\n    );\n    /* tslint:enable:no-bitwise */\n\n    // Sync with outer scope - update editor content if model has been changed from outside of directive.\n    scope.$watch('content', (newValue, oldValue) => {\n      let editorValue = kustoCodeEditor.getValue();\n      if (newValue !== editorValue && newValue !== oldValue) {\n        scope.$$postDigest(function() {\n          kustoCodeEditor.setEditorContent(newValue);\n        });\n      }\n    });\n\n    kustoCodeEditor.setOnDidChangeModelContent(() => {\n      scope.$apply(() => {\n        let newValue = kustoCodeEditor.getValue();\n        scope.content = newValue;\n      });\n    });\n\n    scope.$on('$destroy', () => {\n      kustoCodeEditor.disposeMonaco();\n    });\n  }\n}\n\n/** @ngInject */\nexport function kustoMonacoEditorDirective() {\n  return {\n    restrict: 'E',\n    template: editorTemplate,\n    scope: {\n      content: '=',\n      onChange: '&',\n      getSchema: '&',\n      defaultTimeField: '@',\n      pluginBaseUrl: '@',\n    },\n    link: link,\n  };\n}\n\nangular.module('grafana.controllers').directive('kustoMonacoEditor', kustoMonacoEditorDirective);\n","import { QueryCtrl } from 'grafana/app/plugins/sdk';\nimport _ from 'lodash';\nimport './monaco/kusto_monaco_editor';\nimport { DatabaseItem } from './response_parser';\n\nexport interface ResultFormat {\n  text: string;\n  value: string;\n}\n\nexport class KustoDBQueryCtrl extends QueryCtrl {\n  static templateUrl = 'partials/query.editor.html';\n\n  defaults = {\n    query: [\n      '//change this to create your own time series query',\n      '',\n      '<table name>',\n      '| where $__timeFilter(Timestamp)',\n      '// | summarize count() by <group by column>, bin(Timestamp, $__interval)',\n      '// | order by Timestamp asc',\n    ].join('\\n'),\n    resultFormat: 'time_series',\n    database: '',\n  };\n\n  resultFormats: ResultFormat[];\n  showHelp: boolean;\n  showLastQuery: boolean;\n  lastQuery: string;\n  lastQueryError?: string;\n  databases: DatabaseItem[];\n\n  /** @ngInject **/\n  constructor($scope, $injector) {\n    super($scope, $injector);\n\n    _.defaultsDeep(this.target, this.defaults);\n    this.panelCtrl.events.on(\n      'data-received',\n      this.onDataReceived.bind(this),\n      $scope,\n    );\n    this.panelCtrl.events.on('data-error', this.onDataError.bind(this), $scope);\n    this.resultFormats = [\n      { text: 'Time series', value: 'time_series' },\n      { text: 'Table', value: 'table' },\n    ];\n    this.getDatabases();\n  }\n\n  onDataReceived(dataList) {\n    this.lastQueryError = undefined;\n    this.lastQuery = '';\n\n    let anySeriesFromQuery: any = _.find(dataList, {\n      refId: this.target.refId,\n    });\n    if (anySeriesFromQuery) {\n      this.lastQuery = anySeriesFromQuery.query;\n    }\n  }\n\n  onDataError(err) {\n    this.handleQueryCtrlError(err);\n  }\n\n  handleQueryCtrlError(err) {\n    if (err.query && err.query.refId && err.query.refId !== this.target.refId) {\n      return;\n    }\n\n    if (\n      err.error &&\n      err.error.data &&\n      err.error.data.error &&\n      err.error.data.error.innererror\n    ) {\n      if (err.error.data.error.innererror.innererror) {\n        this.lastQueryError =\n          err.error.data.error.innererror.innererror.message;\n      } else {\n        this.lastQueryError = err.error.data.error.innererror['@message'];\n      }\n    } else if (err.error && err.error.data && err.error.data.error) {\n      this.lastQueryError = err.error.data.error.message;\n    } else if (err.error && err.error.data) {\n      this.lastQueryError = err.error.data.message;\n    } else if (err.data && err.data.error) {\n      this.lastQueryError = err.data.error.message;\n    } else if (err.data && err.data.message) {\n      this.lastQueryError = err.data.message;\n    } else {\n      this.lastQueryError = err;\n    }\n  }\n\n  getDatabases() {\n    return this.datasource.getDatabases().then(dbs => {\n      this.databases = dbs;\n      if (dbs.length > 0 && !this.target.database) {\n        this.target.database =\n          this.datasource.defaultOrFirstDatabase || dbs[0].value;\n      }\n    });\n  }\n\n  getSchema() {\n    return this.getDatabases().then(() => {\n      return this.datasource.getSchema(this.target.database);\n    });\n  }\n}\n","export class KustoDBAnnotationsQueryCtrl {\n  static templateUrl = 'partials/annotations.editor.html';\n  datasource: any;\n  annotation: any;\n  databases: any[];\n  showHelp = false;\n\n  defaultQuery = '<your table>\\n| where $__timeFilter() \\n| project TimeGenerated, Text=YourTitleColumn, Tags=\"tag1,tag2\"';\n\n  /** @ngInject **/\n  constructor() {\n    this.annotation.rawQuery = this.annotation.rawQuery || this.defaultQuery;\n    this.databases = this.getDatabases();\n  }\n\n  getDatabases() {\n    if (this.databases && this.databases.length > 0) {\n      return this.databases;\n    }\n\n    return this.datasource.getDatabases().then(list => {\n      this.databases = list;\n      if (list.length > 0 && !this.annotation.database) {\n        this.annotation.database = list[0].value;\n      }\n      return this.databases;\n    }).catch(() => {});\n  }\n}\n","import _ from 'lodash';\n\nconst versionPattern = /^(\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))?(?:-([0-9A-Za-z\\.]+))?/;\n\nexport class SemVersion {\n  major: number;\n  minor: number;\n  patch: number;\n  meta: string;\n\n  constructor(version: string) {\n    const match = versionPattern.exec(version);\n    if (match) {\n      this.major = Number(match[1]);\n      this.minor = Number(match[2] || 0);\n      this.patch = Number(match[3] || 0);\n      this.meta = match[4];\n    }\n  }\n\n  isGtOrEq(version: string): boolean {\n    const compared = new SemVersion(version);\n\n    for (let i = 0; i < this.comparable.length; ++i) {\n      if (this.comparable[i] > compared.comparable[i]) {\n        return true;\n      }\n      if (this.comparable[i] < compared.comparable[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  isValid(): boolean {\n    return _.isNumber(this.major);\n  }\n\n  get comparable() {\n    return [this.major, this.minor, this.patch];\n  }\n}\n\nexport function isVersionGtOrEq(a: string, b: string): boolean {\n  const aSemver = new SemVersion(a);\n  return aSemver.isGtOrEq(b);\n}\n","import { KustoDBDatasource } from './datasource';\nimport config from 'grafana/app/core/config';\nimport { isVersionGtOrEq } from './version';\n\nexport class KustoDBConfigCtrl {\n  static templateUrl = 'partials/config.html';\n\n  current: any;\n  suggestUrl: string;\n  kustoDbDatasource: any;\n  databases: any[];\n  hasRequiredGrafanaVersion: boolean;\n\n  /** @ngInject */\n  constructor($scope, backendSrv, $q) {\n    this.hasRequiredGrafanaVersion = this.hasMinVersion();\n    this.suggestUrl = 'https://yourcluster.kusto.windows.net';\n    $scope.getSuggestUrls = () => {\n      return [this.suggestUrl];\n    };\n\n    if (this.current.id) {\n      this.current.url = 'api/datasources/proxy/' + this.current.id;\n      this.kustoDbDatasource = new KustoDBDatasource(this.current, backendSrv, $q, null);\n      this.getDatabases();\n    }\n  }\n\n  getDatabases() {\n    return this.kustoDbDatasource.getDatabases().then(dbs => {\n      this.databases = dbs;\n      if (this.databases.length > 0) {\n        this.current.jsonData.defaultDatabase = this.current.jsonData.defaultDatabase || this.databases[0].value;\n      }\n    });\n  }\n\n  hasMinVersion(): boolean {\n    return (\n      isVersionGtOrEq(config.buildInfo.latestVersion, '5.3') ||\n      config.buildInfo.version === '5.3.0-beta1' ||\n      config.buildInfo.version === '5.3.0-pre1'\n    );\n  }\n\n  showMinVersionWarning() {\n    return !this.hasRequiredGrafanaVersion;\n  }\n}\n","import { KustoDBDatasource } from './datasource';\nimport { KustoDBQueryCtrl } from './query_ctrl';\nimport { KustoDBAnnotationsQueryCtrl } from './annotations_query_ctrl';\nimport { KustoDBConfigCtrl } from './config_ctrl';\n\n\nexport {\n  KustoDBDatasource as Datasource,\n  KustoDBQueryCtrl as QueryCtrl,\n  KustoDBConfigCtrl as ConfigCtrl,\n  KustoDBAnnotationsQueryCtrl as AnnotationsQueryCtrl,\n};\n"],"sourceRoot":""}